<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>linq.js test:Ordering</title>

    <script type="text/javascript" src="../jsunit/app/jsUnitCore.js"></script>

    <script type="text/javascript" src="../linq.js"></script>

</head>
<body>
    <!-- This file is linq.js test for JsUnit -->

    <script>
        var E = Linq.Enumerable;
        var result;
        var correct;

        var list = [
           { a: 2, b: 4, c: 1 },
           { a: 2, b: 3, c: 7 },
           { a: 6, b: 6, c: 3 },
           { a: 4, b: 4, c: 5 },
           { a: 7, b: 3, c: 2 },
           { a: 4, b: 4, c: 3 }
       ];

        function testOrderBy()
        {
            var array = [1, 51, 7, 823, 85, 31, 51, 99];
            result = E.From(array).OrderBy("i=>i").ToArray();
            correct = [1, 7, 31, 51, 51, 85, 99, 823];
            assertArrayEquals(correct, result);
        }

        function testOrderByDescending()
        {
            var array = [1, 51, 7, 823, 85, 31, 51, 99];
            result = E.From(array).OrderByDescending("i=>i").ToArray();
            correct = [823, 99, 85, 51, 51, 31, 7, 1];
            assertArrayEquals(correct, result);
        }

        function testThenBy()
        {
            result = E.From(list).OrderBy("l=>l.a").ThenBy("l=>l.b").ThenBy("l=>l.c").ToArray();
            correct = [
               { a: 2, b: 3, c: 7 },
               { a: 2, b: 4, c: 1 },
               { a: 4, b: 4, c: 3 },
               { a: 4, b: 4, c: 5 },
               { a: 6, b: 6, c: 3 },
               { a: 7, b: 3, c: 2 }
           ];
            assertArrayEquals(correct, result);
        }

        function testThenByDescending()
        {
            result = E.From(list).OrderByDescending("l=>l.a")
            .ThenByDescending("l=>l.b").ThenByDescending("l=>l.c").ToArray();
            correct = [
               { a: 7, b: 3, c: 2 },
               { a: 6, b: 6, c: 3 },
               { a: 4, b: 4, c: 5 },
               { a: 4, b: 4, c: 3 },
               { a: 2, b: 4, c: 1 },
               { a: 2, b: 3, c: 7 }
           ];
            assertArrayEquals(correct, result);
        }

        function testReverse()
        {
            var array = [1, 51, 7, 823, 85, 31, 51, 99];
            result = E.From(array).Reverse().ToArray();
            correct = [99, 51, 31, 85, 823, 7, 51, 1];
            assertArrayEquals(correct, result);
        }

        function testShuffle()
        {
            var array = [1, 51, 7, 823, 85, 31, 51, 99];
            result = E.From(array).Shuffle();
            correct = result.SequenceEqual(E.From(array));
            assertArrayEquals(false, correct);
        }
    </script>

</body>
</html>

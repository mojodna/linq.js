<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>linq.xml.js Sample - twitter viewer</title>
    <script src="../linq.js"></script>
    <script src="linq.xml.js"></script>
    <script type="text/javascript">
        // window.onload event
        X.Initialize(function()
        {
            // attach onclick event to button
            X.ID("description")
                .Elements("input")
                .Where("$.Attribute('type').Value()=='button'")
                .Single()
                .AttachEvent("click", UpdatePanelFromTwitter);
        });

        function UpdatePanelFromTwitter(sender,event)
        {
            var twitterBasePath = "https://twitter.com/statuses/user_timeline/";
            var placeHolder = X.ID("placeHolder"); // Get HtmlElement from ID
            placeHolder.SetValue("Loading..."); // Replace Node Value to Text
            var userID = X.ID("userID").Attribute("value").Value(); // Get Text

            // Asynchronus XML Load
            X.Load(twitterBasePath + userID + ".xml", function(rootXml)
            {
                placeHolder.RemoveNodes(); // Remove All ChildNodes
                rootXml.Descendants("status")
                    .Select(function(xEle) // Mapping Object from XML
                    {
                        return {
                            created_at: xEle.Element("created_at").Value(),
                            id: xEle.Element("id").Value(parseInt),
                            text: xEle.Element("text").Value()
                        }
                    })
                    .ForEach(function(obj)
                    {
                        // Build DOM
                        var elem = X.Elem("p",
                            obj.id + ":" + obj.created_at,
                            X.Elem("br"),
                            E.Matches(obj.text, /@([0-9a-zA-Z_]+)|[^@]+|@/).Select(function(m)
                            {
                                return (m[1] != "")
                                    ? X.Elem("a", X.Attr("href", "http://twitter.com/" + m[1]), m[0])
                                    : m[0]; // X.Text(m[0])
                            })
                        );
                        placeHolder.Add(elem); // Add
                    })
            });
        }
    </script>

</head>
<body>
    <div id="description">
        please enable cross domain access.<br />
        Internet Explorer:<br />
        Internet Option -> Security -> Level Customize -> Access data sources across domains -> Enable or Prompt<br />
        TwitterID:<input type="text" id="userID" value="" /><input type="button" value="Refresh" />
    </div>
    <div id="placeHolder">
    </div>
</body>
</html>